package com.arthurcgc.rain;

import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;

import javax.swing.JFrame;

public class Game extends Canvas implements Runnable
{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	
	public static int width = 300;
	public static int height = (width/16) * 9;
	public static int scale = 3;
	private boolean running = false;
	private Thread game_thread;
	private JFrame frame;
	
	
	public Game()
	{
		Dimension size = new Dimension(width*scale, height*scale);
		setPreferredSize(size);
		frame = new JFrame();
	}
	
	public synchronized void start()
	{
		running = true;
		game_thread = new Thread(this, "Display");
		game_thread.start();		
	}
	
	public synchronized void stop()
	{
		try 
		{
			game_thread.join();
		}
		catch(InterruptedException e) 
		{
			e.printStackTrace();
		}
	}
	
	public void run()
	{
		while(running == true)
		{
			update();
			render();
		}
	}
	
	public void update()
	{
		
	}
	
	public void render()
	{
		BufferStrategy bs = getBufferStrategy();
		if(bs == null)
		{
			createBufferStrategy(3);
			return;
		}
		
		Graphics g = bs.getDrawGraphics();
		g.fillRect(0, 0, getWidth(), Getheight());
		g.dispose();
	}
	
	public static void main(String[] args)
	{
		Game game = new Game();
		game.frame.setResizable(false);
		game.frame.setTitle("Rain");
		game.frame.add(game);
		game.frame.pack();
		game.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		game.frame.setLocationRelativeTo(null);
		game.frame.setVisible(true);	
		
		game.start();
	}
	
	
	
	
	
	
	
	
	
	
	
}
